{"mappings":"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","sources":["src/js/services/loadingcheck-shopping-list.js","src/js/partials/shoping-list/selected-books.js"],"sourcesContent":["import { authCheck } from '../modals/authorization';\n\n\nwindow.addEventListener('DOMContentLoaded', event => {\n  const layoutElement = document.querySelector('.layout');\n  layoutElement.classList.add('is-loading');\n\n  Promise.all([authCheck()]).then(\n    () => {\n      const loadingElement = document.querySelector('.js-loading');\n      const layoutElement = document.querySelector('.layout');\n\n      loadingElement.classList.add('loading-overlay-hide');\n      layoutElement.classList.remove('is-loading');\n    }\n  );\n});\n","import axios from 'axios';\n //import { save, load } from './localStorageService.js';\n\nconst API_URL = 'https://books-backend.p.goit.global/books/top-books';\nconst SHOPPING_LIST_LOCAL_STORAGE_KEY = 'ShoppingList';\nlet booksFromLocalStorage;\n\n\nconst refs = {\n    sellectedBooksList: document.querySelector('.sellected-books-list'),\n    noBooksSection: document.querySelector('.books-not-available'),\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Only for test\n    InitializeShoppingListTest();\n\n    InitializeShoppingList();\n  });\n\n  function InitializeShoppingList()\n  {\n    booksFromLocalStorage = load(SHOPPING_LIST_LOCAL_STORAGE_KEY);\n\n    if(booksFromLocalStorage && booksFromLocalStorage.length > 0){\n        renderBooks(booksFromLocalStorage);\n        hideEmptyMessage();\n        setPagination();\n    }\n    else{\n      paginationContainer.style.display = 'none';\n    }\n  }\n\n  function hideEmptyMessage(){\n    refs.noBooksSection.style.display = 'none';\n  }\n\n  function showEmptyMessage(){\n    refs.noBooksSection.style.display = 'block';\n  }\n\n  function renderBooks(books) {\n    let markupBooks = books.map(\n        ({\n            _id,\n            title,\n            author,\n            book_image,\n            description,\n            list_name,\n            buy_links,\n    }) => {\n        let amazonLink = buy_links.find(book => book.name == 'Amazon').url;\n        let appleLink = buy_links.find(book => book.name == 'Apple Books').url;\n        let bookshopLink = buy_links.find(book => book.name == 'Bookshop').url;\n        return `<li id=\"${_id}\" class=\"book-item\">\n            <img src=\"${book_image}\" alt=\"${title}\" class=\"book-image\" />\n            <div class=\"book-info\">\n            <div class=\"book-style\">\n            <h2 class=\"book-title\">${title}</h2>\n            \n            <div>\n            <button id=\"${_id}\" class=\"delete-book-button\"></button>\n            </div>\n            </div>\n            \n            <p class=\"book-category\">${list_name}</p>\n            <p class=\"book-description\">David Burroughs was once a devoted father to his three-year-old son Matthew, living a dream life just a short drive away from the working-class suburb where he and his wife, Cheryl, first fell in love--until one fateful night when David woke suddenly to discover Matthew had been murdered while David was asleep just down the hall.</p>\n            <div class=\"book-styles\">\n            <h3 class=\"book-author\">${author}</h3>\n            <div class=\"trading-platforms-list list\">\n            <a href=\"\"></a>\n            <a href=\"${amazonLink}\" class=\"amazon\"></a>\n            <a href=\"${appleLink}\" class=\"apple\"></a>\n            <a href=\"${bookshopLink}\" class=\"shop\"></a>\n            </div>\n            </div>\n            </div>\n        </li>`\n    })\n    .join('');\n   refs.sellectedBooksList.insertAdjacentHTML('beforeend', markupBooks);\n   bindDeleteButtonsEvents();\n  }\n\n  function bindDeleteButtonsEvents(){\n    let deleteButtonRefs = document.querySelectorAll('.delete-book-button');\n    deleteButtonRefs.forEach(book => book.addEventListener('click', deleteBook));\n  }\n\n  function deleteBook(e){\n    const bookId = e.srcElement.id;\n    deleteBookFromLocalStorage(bookId);\n    deleteBookFromList(bookId);\n\n    if(!booksFromLocalStorage || booksFromLocalStorage.length < 1) {\n        showEmptyMessage();\n        paginationContainer.style.display = 'none';\n    }\n    else\n    {\n      recalculatePages();\n    }\n  }\n\n  function deleteBookFromLocalStorage(bookId){\n    booksFromLocalStorage = booksFromLocalStorage.filter(book => book._id !== bookId);\n    save(SHOPPING_LIST_LOCAL_STORAGE_KEY, booksFromLocalStorage);\n  }\n\n  function deleteBookFromList(bookId){\n    const bookElement = document.getElementById(bookId.toString());\n    bookElement.remove();\n  }\n\n  // Only for test\nasync function InitializeShoppingListTest() {\n    \n      try {\n        let mappedBookList;\n        const response = await axios.get(`${API_URL}`);\n        if(response && response.data)\n        {\n            let bookslist = response.data[0].books;\n            mappedBookList = bookslist.map(({\n                _id,\n                title,\n                author,\n                book_image,\n                description,\n                list_name,\n                buy_links,\n            }) =>  ({ _id, title, author, book_image, description, list_name, buy_links }));\n        }\n        console.log(mappedBookList);\n\n        if(mappedBookList && mappedBookList.length > 0) {\n            save(SHOPPING_LIST_LOCAL_STORAGE_KEY, mappedBookList);\n        }\n\n        return response.data;\n      } catch (error) {\n         console.error(error.toJSON());\n      }\n    }\n\n//LocalStorageService\nconst save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error(\"Set state error: \", error.message);\n    }\n  };\n  \n  const load = key => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error(\"Get state error: \", error.message);\n    }\n  };\n// --------------------------\n\n//  let text = 'это вопрос религии, или объективные причины есть? =) Для некого универсального плагина,...';\n \n// let sliced = text.slice(0, 15);\n// if (sliced.length < text.length) {\n// sliced += '...';\n// }\n// console.log(sliced);\n\n\n\n//    Pagination\nconst paginationNumbers = document.getElementById(\"pagination-numbers\");\nconst paginatedList = document.getElementById(\"paginated-list\");\nconst nextButton = document.getElementById(\"next-button\");\nconst prevButton = document.getElementById(\"prev-button\");\nconst paginationContainer = document.getElementById(\"pagination-container\");\nlet listItems;\nconst paginationLimit = 3;\nlet pageCount;\nlet currentPage;\n\nfunction setPagination() {\n  listItems = paginatedList.querySelectorAll(\"li\");\n  pageCount = Math.ceil(listItems.length / paginationLimit);\n\n  if (pageCount < 2)\n  {\n    paginationContainer.style.display = 'none';\n    return;\n  }\n\n  getPaginationNumbers();\n  setCurrentPage(1);\n  setNextAndPreviousButtons();\n\n  document.querySelectorAll(\".pagination-number\").forEach((button) => {\n    const pageIndex = Number(button.getAttribute(\"page-index\"));\n    if (pageIndex) {\n      button.addEventListener(\"click\", () => {\n        setCurrentPage(pageIndex);\n      });\n    }\n  });\n}\n\nconst getPaginationNumbers = () => {\n  for (let i = 1; i <= pageCount; i++) {\n    appendPageNumber(i);\n  }\n};\n\nconst appendPageNumber = (index) => {\n  const pageNumber = document.createElement(\"button\");\n  pageNumber.className = \"pagination-number\";\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute(\"page-index\", index);\n  pageNumber.setAttribute(\"aria-label\", \"Page \" + index);\n  paginationNumbers.appendChild(pageNumber);\n};\n\nconst setCurrentPage = (pageNum) => {\n  currentPage = pageNum;\n  \n  handleActivePageNumber();\n  handlePageButtonsStatus();\n\n  const prevRange = (pageNum - 1) * paginationLimit;\n  const currRange = pageNum * paginationLimit;\n\n  listItems.forEach((item, index) => {\n    item.style.display = 'none';\n    if (index >= prevRange && index < currRange) {\n      item.style.display = 'flex';\n    }\n  });\n};\n\nfunction setNextAndPreviousButtons (){\n  prevButton.addEventListener(\"click\", () => {\n    setCurrentPage(currentPage - 1);\n  });\n  nextButton.addEventListener(\"click\", () => {\n    setCurrentPage(currentPage + 1);\n  });\n}\n \nconst handleActivePageNumber = () => {\n  document.querySelectorAll(\".pagination-number\").forEach((button) => {\n    button.classList.remove(\"active\");\n    \n    const pageIndex = Number(button.getAttribute(\"page-index\"));\n    if (pageIndex == currentPage) {\n      button.classList.add(\"active\");\n    }\n  });\n};\n\nconst disableButton = (button) => {\n  button.classList.add(\"disabled\");\n  button.setAttribute(\"disabled\", true);\n};\n\nconst enableButton = (button) => {\n  button.classList.remove(\"disabled\");\n  button.removeAttribute(\"disabled\");\n};\n\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\nconst recalculatePages = () => {\n  paginationNumbers.innerHTML = '';\n  listItems = paginatedList.querySelectorAll(\"li\");\n  pageCount = Math.ceil(listItems.length / paginationLimit);\n  \n  if (pageCount < 2)\n  {\n    paginationContainer.style.display = 'none';\n    \n    return;\n  }\n\nif (currentPage > pageCount)\n{\n  currentPage = pageCount;\n}\n\n  getPaginationNumbers();\n  setCurrentPage(currentPage);\n  setNextAndPreviousButtons();\n\n  document.querySelectorAll(\".pagination-number\").forEach((button) => {\n    const pageIndex = Number(button.getAttribute(\"page-index\"));\n    if (pageIndex) {\n      button.addEventListener(\"click\", () => {\n        setCurrentPage(pageIndex);\n        \n      });\n      console.log( setCurrentPage(pageIndex));\n    }\n  });\n}\n\n\n\n// window.addEventListener(\"load\", () => {\n//   getPaginationNumbers();\n// });\n\n\n\n// jsonData.forEach((item, index) => {\n//   elementContainer.innerHTML = ''\n//   if (index >= prevRange && index < currRange) {\n//     elementContainer.appendChild(item)\n//   }\n// });\n\n\n\n// window.addEventListener(\"load\", () => {\n  \n// });\n\n\n\n\n\n\n\n\n\n// ONO EST\n// const setCurrentPage = (pageNum) => {\n//   currentPage = pageNum;\n// };\n\n// const setCurrentPage = (pageNum) => {\n//   currentPage = pageNum;\n  \n//   const prevRange = (pageNum - 1) * paginationLimit;\n//   const currRange = pageNum * paginationLimit;\n// };\n\n// const setCurrentPage = (pageNum) => {\n//   currentPage = pageNum;\n  \n//   const prevRange = (pageNum - 1) * paginationLimit;\n//   const currRange = pageNum * paginationLimit;\n//   listItems.forEach((item, index) => {\n//     item.classList.add(\"hidden\");\n//     if (index >= prevRange && index < currRange) {\n//       item.classList.remove(\"hidden\");\n//     }\n//   });\n// };\n// window.addEventListener(\"load\", () => {\n//   getPaginationNumbers();\n//   setCurrentPage(1);\n// });"],"names":["$kZtGT","parcelRequire","window","addEventListener","event","document","querySelector","classList","add","Promise","all","authCheck","then","loadingElement","layoutElement","remove","$d7c4621ffac89723$var$booksFromLocalStorage","$bpxeT","$d7c4621ffac89723$var$API_URL","$d7c4621ffac89723$var$SHOPPING_LIST_LOCAL_STORAGE_KEY","$d7c4621ffac89723$var$refs","sellectedBooksList","noBooksSection","$d7c4621ffac89723$var$deleteBook","e","bookId","srcElement","id","filter","book","_id","$d7c4621ffac89723$var$save","$d7c4621ffac89723$var$deleteBookFromLocalStorage","getElementById","toString","$d7c4621ffac89723$var$deleteBookFromList","length","style","display","$d7c4621ffac89723$var$paginationContainer","$d7c4621ffac89723$var$recalculatePages","$d7c4621ffac89723$var$_InitializeShoppingListTest","$parcel$interopDefault","$2TvXO","mark","_callee","mappedBookList","response","bookslist","$dIxxU","default","get","concat","_ctx","sent","data","books","map","param","title","author","book_image","description","list_name","buy_links","console","log","error","t0","toJSON","apply","this","arguments","markupBooks","$d7c4621ffac89723$var$InitializeShoppingListTest","$d7c4621ffac89723$var$load","amazonLink","find","name","url","appleLink","bookshopLink","join","insertAdjacentHTML","querySelectorAll","forEach","$d7c4621ffac89723$var$listItems","$d7c4621ffac89723$var$paginatedList","$d7c4621ffac89723$var$pageCount","Math","ceil","$d7c4621ffac89723$var$getPaginationNumbers","$d7c4621ffac89723$var$setCurrentPage","$d7c4621ffac89723$var$setNextAndPreviousButtons","button","pageIndex","Number","getAttribute","$d7c4621ffac89723$var$currentPage","key","value","serializedState","JSON","stringify","localStorage","setItem","message","getItem","undefined","parse","$d7c4621ffac89723$var$paginationNumbers","$d7c4621ffac89723$var$nextButton","$d7c4621ffac89723$var$prevButton","i","$d7c4621ffac89723$var$appendPageNumber","index","pageNumber","createElement","className","innerHTML","setAttribute","appendChild","pageNum","$d7c4621ffac89723$var$handleActivePageNumber","$d7c4621ffac89723$var$handlePageButtonsStatus","prevRange","currRange","item","$d7c4621ffac89723$var$disableButton","$d7c4621ffac89723$var$enableButton","removeAttribute"],"version":3,"file":"shoping-list.eff220ce.js.map"}