{"mappings":"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","sources":["src/js/services/loadingcheck-shopping-list.js","src/js/partials/shoping-list/selected-books.js"],"sourcesContent":["import { authCheck } from '../modals/authorization';\n\n\nwindow.addEventListener('DOMContentLoaded', event => {\n  const layoutElement = document.querySelector('.layout');\n  layoutElement.classList.add('is-loading');\n\n  Promise.all([authCheck()]).then(\n    () => {\n      const loadingElement = document.querySelector('.js-loading');\n      const layoutElement = document.querySelector('.layout');\n\n      loadingElement.classList.add('loading-overlay-hide');\n      layoutElement.classList.remove('is-loading');\n    }\n  );\n});\n","import axios from 'axios';\n //import { save, load } from './localStorageService.js';\n\nconst API_URL = 'https://books-backend.p.goit.global/books/top-books';\nconst SHOPPING_LIST_LOCAL_STORAGE_KEY = 'ShoppingList';\nlet booksFromLocalStorage;\n\nconst refs = {\n    sellectedBooksList: document.querySelector('.sellected-books-list'),\n    noBooksSection: document.querySelector('.books-not-available'),\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Only for test\n    InitializeShoppingListTest();\n\n    InitializeShoppingList();\n  });\n\n  function InitializeShoppingList()\n  {\n    booksFromLocalStorage = load(SHOPPING_LIST_LOCAL_STORAGE_KEY);\n\n    if(booksFromLocalStorage && booksFromLocalStorage.length > 0){\n        renderBooks(booksFromLocalStorage);\n        hideEmptyMessage();\n    }\n  }\n\n  function hideEmptyMessage(){\n    refs.noBooksSection.style.display = 'none';\n  }\n\n  function showEmptyMessage(){\n    refs.noBooksSection.style.display = 'block';\n  }\n\n  function renderBooks(books) {\n    let markupBooks = books.map(\n        ({\n            _id,\n            title,\n            author,\n            book_image,\n            description,\n            list_name,\n            buy_links,\n    }) => {\n        let amazonLink = buy_links.find(book => book.name == 'Amazon').url;\n        let appleLink = buy_links.find(book => book.name == 'Apple Books').url;\n        let bookshopLink = buy_links.find(book => book.name == 'Bookshop').url;\n        return `<li id=\"${_id}\" class=\"book-item\">\n            <img src=\"${book_image}\" alt=\"${title}\" class=\"book-image\" />\n            <div class=\"book-info\">\n            <div class=\"book-style\">\n            <h2 class=\"book-title\">${title}</h2>\n            \n            <div>\n            <button id=\"${_id}\" class=\"delete-book-button\"></button>\n            </div>\n            </div>\n            \n            <p class=\"book-category\">${list_name}</p>\n            <p class=\"book-description\">David Burroughs was once a devoted father to his three-year-old son Matthew, living a dream life just a short drive away from the working-class suburb where he and his wife, Cheryl, first fell in love--until one fateful night when David woke suddenly to discover Matthew had been murdered while David was asleep just down the hall.</p>\n            <div class=\"book-styles\">\n            <h3 class=\"book-author\">${author}</h3>\n            <div class=\"trading-platforms-list list\">\n            <a href=\"\"></a>\n            <a href=\"${amazonLink}\" class=\"amazon\"></a>\n            <a href=\"${appleLink}\" class=\"apple\"></a>\n            <a href=\"${bookshopLink}\" class=\"shop\"></a>\n            </div>\n            </div>\n            </div>\n        </li>`\n    })\n    .join('');\n   refs.sellectedBooksList.insertAdjacentHTML('beforeend', markupBooks);\n   bindDeleteButtonsEvents();\n  }\n\n  function bindDeleteButtonsEvents(){\n    let deleteButtonRefs = document.querySelectorAll('.delete-book-button');\n    deleteButtonRefs.forEach(book => book.addEventListener('click', deleteBook));\n  }\n\n  function deleteBook(e){\n    const bookId = e.srcElement.id;\n    deleteBookFromLocalStorage(bookId);\n    deleteBookFromList(bookId);\n\n    if(!booksFromLocalStorage || booksFromLocalStorage.length < 1) {\n        showEmptyMessage();\n    }\n  }\n\n  function deleteBookFromLocalStorage(bookId){\n    booksFromLocalStorage = booksFromLocalStorage.filter(book => book._id !== bookId);\n    save(SHOPPING_LIST_LOCAL_STORAGE_KEY, booksFromLocalStorage);\n  }\n\n  function deleteBookFromList(bookId){\n    const bookElement = document.getElementById(bookId.toString());\n    bookElement.style.display = 'none';\n  }\n\n  // Only for test\nasync function InitializeShoppingListTest() {\n    \n      try {\n        let mappedBookList;\n        const response = await axios.get(`${API_URL}`);\n        if(response && response.data)\n        {\n            let bookslist = response.data[0].books;\n            mappedBookList = bookslist.map(({\n                _id,\n                title,\n                author,\n                book_image,\n                description,\n                list_name,\n                buy_links,\n            }) =>  ({ _id, title, author, book_image, description, list_name, buy_links }));\n        }\n        console.log(mappedBookList);\n\n        if(mappedBookList && mappedBookList.length > 0) {\n            save(SHOPPING_LIST_LOCAL_STORAGE_KEY, mappedBookList);\n        }\n\n        return response.data;\n      } catch (error) {\n         console.error(error.toJSON());\n      }\n    }\n\n//LocalStorageService\nconst save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error(\"Set state error: \", error.message);\n    }\n  };\n  \n  const load = key => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error(\"Get state error: \", error.message);\n    }\n  };\n// --------------------------\n\n//  let text = 'это вопрос религии, или объективные причины есть? =) Для некого универсального плагина,...';\n \n// let sliced = text.slice(0, 15);\n// if (sliced.length < text.length) {\n// sliced += '...';\n// }\n// console.log(sliced);\n\n\n\n\n"],"names":["$kZtGT","parcelRequire","window","addEventListener","event","document","querySelector","classList","add","Promise","all","authCheck","then","loadingElement","layoutElement","remove","$d7c4621ffac89723$var$booksFromLocalStorage","$bpxeT","$d7c4621ffac89723$var$API_URL","$d7c4621ffac89723$var$SHOPPING_LIST_LOCAL_STORAGE_KEY","$d7c4621ffac89723$var$refs","sellectedBooksList","noBooksSection","$d7c4621ffac89723$var$deleteBook","e","bookId","srcElement","id","filter","book","_id","$d7c4621ffac89723$var$save","$d7c4621ffac89723$var$deleteBookFromLocalStorage","getElementById","toString","style","display","$d7c4621ffac89723$var$deleteBookFromList","length","$d7c4621ffac89723$var$_InitializeShoppingListTest","$parcel$interopDefault","$2TvXO","mark","_callee","mappedBookList","response","bookslist","$dIxxU","default","get","concat","_ctx","sent","data","books","map","param","title","author","book_image","description","list_name","buy_links","console","log","error","t0","toJSON","apply","this","arguments","markupBooks","$d7c4621ffac89723$var$InitializeShoppingListTest","$d7c4621ffac89723$var$load","amazonLink","find","name","url","appleLink","bookshopLink","join","insertAdjacentHTML","querySelectorAll","forEach","key","value","serializedState","JSON","stringify","localStorage","setItem","message","getItem","undefined","parse"],"version":3,"file":"shoping-list.4721e676.js.map"}