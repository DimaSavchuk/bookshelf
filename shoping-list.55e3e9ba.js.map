{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,SAKA,IAAIE,EAEJ,MAAMC,EAAO,CACTC,mBAAoBC,SAASC,cAAc,yBAC3CC,eAAgBF,SAASC,cAAc,yBA6EzC,SAASE,EAAWC,GAClB,MAAMC,EAASD,EAAEE,WAAWC,IAS9B,SAAoCF,GAClCR,EAAwBA,EAAsBW,QAAOC,GAAQA,EAAKC,MAAQL,IAC1EM,EA9FoC,eA8FEd,E,CAVtCe,CAA2BP,GAa7B,SAA4BA,GACNL,SAASa,eAAeR,EAAOS,YACvCC,MAAMC,QAAU,M,CAd5BC,CAAmBZ,KAEfR,GAAyBA,EAAsBqB,OAAS,KAzD5DpB,EAAKI,eAAea,MAAMC,QAAU,Q,CAtBxChB,SAASmB,iBAAiB,oBAAoB,MA+F9CC,iBAEM,IACE,IAAIC,EACJ,MAAMC,QAAiB1B,EAAA2B,QAAMC,IAAI,uDACjC,GAAGF,GAAYA,EAASG,KACxB,CAEIJ,EADgBC,EAASG,KAAK,GAAGC,MACNC,KAAI,EAACjB,IAC5BA,EAAGkB,MACHA,EAAKC,OACLA,EAAMC,WACNA,EAAUC,YACVA,EAAWC,UACXA,EAASC,UACTA,MACI,C,IAAEvB,E,MAAKkB,E,OAAOC,E,WAAQC,E,YAAYC,E,UAAaC,E,UAAWC,K,CAEtEC,QAAQC,IAAId,GAETA,GAAkBA,EAAeH,OAAS,GACzCP,EA5H4B,eA4HUU,GAGnCC,EAASG,I,CAChB,MAAOW,GACNF,QAAQE,MAAMA,EAAMC,S,EAvHzBC,GAOAzC,EAAwB0C,EAjBY,gBAmBjC1C,GAAyBA,EAAsBqB,OAAS,IAc7D,SAAqBQ,GACnB,IAAIc,EAAcd,EAAMC,KACpB,EAACjB,IACGA,EAAGkB,MACHA,EAAKC,OACLA,EAAMC,WACNA,EAAUC,YACVA,EAAWC,UACXA,EAASC,UACTA,KAKG,WAAWvB,gDACFoB,WAAoBF,2IAGPA,oEAGXlB,uIAIasB,8cAGDH,oHAjBbI,EAAUQ,MAAKhC,GAAqB,UAAbA,EAAKiC,OAAkBC,kDAC/CV,EAAUQ,MAAKhC,GAAqB,eAAbA,EAAKiC,OAAuBC,iDAChDV,EAAUQ,MAAKhC,GAAqB,YAAbA,EAAKiC,OAAoBC,sGA0BtEC,KAAK,IACP9C,EAAKC,mBAAmB8C,mBAAmB,YAAaL,GAKhCxC,SAAS8C,iBAAiB,uBAChCC,SAAQtC,GAAQA,EAAKU,iBAAiB,QAAShB,I,CA3D5D6C,CAAYnD,GAMhBC,EAAKI,eAAea,MAAMC,QAAU,OAdZ,IA0H5B,MAAML,EAAO,CAACsC,EAAKC,KACf,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOf,GACPF,QAAQE,MAAM,oBAAqBA,EAAMoB,Q,GAIvCjB,EAAOU,IACX,IACE,MAAME,EAAkBG,aAAaG,QAAQR,GAC7C,OAA2B,OAApBE,OAA2BO,EAAYN,KAAKO,MAAMR,E,CACzD,MAAOf,GACPF,QAAQE,MAAM,oBAAqBA,EAAMoB,Q","sources":["src/shoping-list.js","src/js/partials/shoping-list/selected-books.js"],"sourcesContent":["import './js/modals/authorization';\n\nimport './js/partials/header';\nimport './js/partials/support';\nimport './js/partials/shoping-list/selected-books';\nimport './js/partials/footer';\n\nimport './js/modals/about-book';","import axios from 'axios';\n //import { save, load } from './localStorageService.js';\n\nconst API_URL = 'https://books-backend.p.goit.global/books/top-books';\nconst SHOPPING_LIST_LOCAL_STORAGE_KEY = 'ShoppingList';\nlet booksFromLocalStorage;\n\nconst refs = {\n    sellectedBooksList: document.querySelector('.sellected-books-list'),\n    noBooksSection: document.querySelector('.books-not-available'),\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Only for test\n    InitializeShoppingListTest();\n\n    InitializeShoppingList();\n  });\n\n  function InitializeShoppingList()\n  {\n    booksFromLocalStorage = load(SHOPPING_LIST_LOCAL_STORAGE_KEY);\n\n    if(booksFromLocalStorage && booksFromLocalStorage.length > 0){\n        renderBooks(booksFromLocalStorage);\n        hideEmptyMessage();\n    }\n  }\n\n  function hideEmptyMessage(){\n    refs.noBooksSection.style.display = 'none';\n  }\n\n  function showEmptyMessage(){\n    refs.noBooksSection.style.display = 'block';\n  }\n\n  function renderBooks(books) {\n    let markupBooks = books.map(\n        ({\n            _id,\n            title,\n            author,\n            book_image,\n            description,\n            list_name,\n            buy_links,\n    }) => {\n        let amazonLink = buy_links.find(book => book.name == 'Amazon').url;\n        let appleLink = buy_links.find(book => book.name == 'Apple Books').url;\n        let bookshopLink = buy_links.find(book => book.name == 'Bookshop').url;\n        return `<li id=\"${_id}\" class=\"book-item\">\n            <img src=\"${book_image}\" alt=\"${title}\" class=\"book-image\" />\n            <div class=\"book-info\">\n            <div class=\"book-style\">\n            <h2 class=\"book-title\">${title}</h2>\n            \n            <div>\n            <button id=\"${_id}\" class=\"delete-book-button\"></button>\n            </div>\n            </div>\n            \n            <p class=\"book-category\">${list_name}</p>\n            <p class=\"book-description\">David Burroughs was once a devoted father to his three-year-old son Matthew, living a dream life just a short drive away from the working-class suburb where he and his wife, Cheryl, first fell in love--until one fateful night when David woke suddenly to discover Matthew had been murdered while David was asleep just down the hall.</p>\n            <div class=\"book-styles\">\n            <h3 class=\"book-author\">${author}</h3>\n            <div class=\"trading-platforms-list list\">\n            <a href=\"\"></a>\n            <a href=\"${amazonLink}\" class=\"amazon\"></a>\n            <a href=\"${appleLink}\" class=\"apple\"></a>\n            <a href=\"${bookshopLink}\" class=\"shop\"></a>\n            </div>\n            </div>\n            </div>\n        </li>`\n    })\n    .join('');\n   refs.sellectedBooksList.insertAdjacentHTML('beforeend', markupBooks);\n   bindDeleteButtonsEvents();\n  }\n\n  function bindDeleteButtonsEvents(){\n    let deleteButtonRefs = document.querySelectorAll('.delete-book-button');\n    deleteButtonRefs.forEach(book => book.addEventListener('click', deleteBook));\n  }\n\n  function deleteBook(e){\n    const bookId = e.srcElement.id;\n    deleteBookFromLocalStorage(bookId);\n    deleteBookFromList(bookId);\n\n    if(!booksFromLocalStorage || booksFromLocalStorage.length < 1) {\n        showEmptyMessage();\n    }\n  }\n\n  function deleteBookFromLocalStorage(bookId){\n    booksFromLocalStorage = booksFromLocalStorage.filter(book => book._id !== bookId);\n    save(SHOPPING_LIST_LOCAL_STORAGE_KEY, booksFromLocalStorage);\n  }\n\n  function deleteBookFromList(bookId){\n    const bookElement = document.getElementById(bookId.toString());\n    bookElement.style.display = 'none';\n  }\n\n  // Only for test\nasync function InitializeShoppingListTest() {\n    \n      try {\n        let mappedBookList;\n        const response = await axios.get(`${API_URL}`);\n        if(response && response.data)\n        {\n            let bookslist = response.data[0].books;\n            mappedBookList = bookslist.map(({\n                _id,\n                title,\n                author,\n                book_image,\n                description,\n                list_name,\n                buy_links,\n            }) =>  ({ _id, title, author, book_image, description, list_name, buy_links }));\n        }\n        console.log(mappedBookList);\n\n        if(mappedBookList && mappedBookList.length > 0) {\n            save(SHOPPING_LIST_LOCAL_STORAGE_KEY, mappedBookList);\n        }\n\n        return response.data;\n      } catch (error) {\n         console.error(error.toJSON());\n      }\n    }\n\n//LocalStorageService\nconst save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error(\"Set state error: \", error.message);\n    }\n  };\n  \n  const load = key => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error(\"Get state error: \", error.message);\n    }\n  };\n// --------------------------\n\n//  let text = 'это вопрос религии, или объективные причины есть? =) Для некого универсального плагина,...';\n \n// let sliced = text.slice(0, 15);\n// if (sliced.length < text.length) {\n// sliced += '...';\n// }\n// console.log(sliced);\n\n\n\n\n"],"names":["parcelRequire","$2shzp","$acdd5c8a1c351adc$var$booksFromLocalStorage","$acdd5c8a1c351adc$var$refs","sellectedBooksList","document","querySelector","noBooksSection","$acdd5c8a1c351adc$var$deleteBook","e","bookId","srcElement","id","filter","book","_id","$acdd5c8a1c351adc$var$save","$acdd5c8a1c351adc$var$deleteBookFromLocalStorage","getElementById","toString","style","display","$acdd5c8a1c351adc$var$deleteBookFromList","length","addEventListener","async","mappedBookList","response","default","get","data","books","map","title","author","book_image","description","list_name","buy_links","console","log","error","toJSON","$acdd5c8a1c351adc$var$InitializeShoppingListTest","$acdd5c8a1c351adc$var$load","markupBooks","find","name","url","join","insertAdjacentHTML","querySelectorAll","forEach","$acdd5c8a1c351adc$var$renderBooks","key","value","serializedState","JSON","stringify","localStorage","setItem","message","getItem","undefined","parse"],"version":3,"file":"shoping-list.55e3e9ba.js.map"}